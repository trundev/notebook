name: Generate Jupyter notebook cell outputs

on:
  workflow_dispatch:
    inputs:
      SRC_REF:
        description: "Git commit reference to process"
        required: true
        default: ""
      DST_REF:
        description: "Tag to be created at the result commit"
        required: false
        default: ""
  push:
    branches: [ master, '**-test' ]

env:
  SRC_REF: ''
  DST_REF: ${{ github.event.inputs.DST_REF }}
  NOTEBOOK_FLT: '-Recurse *.ipynb'
  PIP_MODULES: 'jupyter matplotlib'
  MASTER_BRANCH: 'refs/heads/master'
  GENERATED_BRANCH: 'generated'
  GENERATED_BRANCH_OLD: 'generated-old'

jobs:
  generate:
    runs-on: windows-latest

    steps:
    - name: Source reference (on workflow_dispatch)
      if: github.event.inputs.SRC_REF
      run: |
        echo "SRC_REF=${{ github.event.inputs.SRC_REF }}" >> ${env:GITHUB_ENV}

    - uses: actions/checkout@v2
      with:
        ref: ${{ env.SRC_REF }}

    - name: Select output branch/tag name
      if: ${{! env.DST_REF }}
      run: |
        $DST_REF = "gen-$(git rev-parse --short HEAD)"
        echo "DST_REF=$DST_REF" >> ${env:GITHUB_ENV}
        echo "DST_REF set to $DST_REF"

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Jupyter
      run: |
        pip install ${{ env.PIP_MODULES }}

    - name: Execute Jupyter notebooks
      run: |
        foreach ($file in Get-ChildItem ${{ env.NOTEBOOK_FLT }}) {
          echo "Processing $($file.Name)..."
          jupyter nbconvert --to notebook --execute $file --output=$file
          if ($LASTEXITCODE) {exit $LASTEXITCODE}

          git add $file
        }

    - name: Commit to ${{ env.DST_REF }}
      run: |
        git branch ${{ env.DST_REF }}
        git checkout ${{ env.DST_REF }}
        $short_ref=$(git rev-parse --short HEAD)
        git -c user.name="${{ github.actor }}" -c user.email="" commit -m "
        Auto-generated notebook cells from $short_ref

        Updated cell outputs in Jupyter notebooks from commit:
        ${{ github.server_url }}/${{ github.repository }}/tree/$short_ref

        This is generated by GitHub action ID ${{ github.run_id }}"

    - name: Update "${{ env.GENERATED_BRANCH }}" branch
      id: make_gen
      if: github.ref == env.MASTER_BRANCH
      run: |
        git fetch origin refs/heads/${{ env.GENERATED_BRANCH }}
        if (!$LASTEXITCODE) {
          echo "Branch '${{ env.GENERATED_BRANCH }}' already exists renaming to '${{ env.GENERATED_BRANCH_OLD }}'"
          git push origin --delete refs/heads/${{ env.GENERATED_BRANCH_OLD }}
          git push origin refs/remotes/origin/${{ env.GENERATED_BRANCH }}:refs/heads/${{ env.GENERATED_BRANCH_OLD }}
          git push origin --delete refs/heads/${{ env.GENERATED_BRANCH }}
        }
        git branch ${{ env.GENERATED_BRANCH }}
        git push origin ${{ env.GENERATED_BRANCH }}

    - name: Push changes as tag ${{ env.DST_REF }}
      if: steps.make_gen.conclusion != 'success'
      run: |
        git tag ${{ env.DST_REF }}
        git push origin refs/tags/${{ env.DST_REF }}
